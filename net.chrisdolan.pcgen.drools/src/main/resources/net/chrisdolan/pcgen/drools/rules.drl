package net.chrisdolan.pcgen.drools;
    dialect "java"

import net.chrisdolan.pcgen.drools.input.*;
import net.chrisdolan.pcgen.drools.type.*;

rule "Global.Initialization"
    salience 100000 // trigger this rule first of all
    when
    then
        System.out.println("--Engine init--");
end

declare Stack
   value : int
   type : String
   subtype : String
end
declare StackRule
    type : String
    subtype : String
    rulename : String
end

rule "Stack.Max"
    when
        $s : Input($t:type, $st:subtype, $v:value)
        not Input(type == $t, subtype == $st, value > $v)
        (not StackRule(type == $t, subtype == $st) or StackRule(type == $t, subtype == $st, rulename == "Max"))
    then
        //System.out.println("max of " + $t + "." + $st + "=" + $v);
        insertLogical(new Stack($v,$t,$st));
end

rule "Stack.Sum"
    when
        StackRule($t:type, $st:subtype, rulename == "Sum")
        Number($sum : intValue) from accumulate(Input(type == $t, subtype == $st, $v:value), sum($v))
    then
        //System.out.println("sum of " + $t + "." + $st + "=" + $sum);
        insertLogical(new Stack($sum,$t,$st));
end
