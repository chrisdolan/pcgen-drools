package net.chrisdolan.pcgen.drools.pathfinder;
    dialect "java"

import net.chrisdolan.pcgen.drools.input.*;
import net.chrisdolan.pcgen.drools.type.*;

query "Query.Ability.All"
    Ability(name : name)
end

declare Ability
    name : String
end
declare AbilityGrant
    ability : Ability
    source : Object
end
declare AbilityReplacement
    ability : Ability
    source : Object
end

rule "Ability.UserInput"
    when
        AbilityInput($n:name)
    then
        insertLogical(new Ability($n));
end

rule "Ability.Feat.UserInput"
    when
        FeatInput($n:name, $t:type)
    then
        insertLogical(new Ability("Feat." + $n + ($t == null ? "" : "." + $t)));
end
rule "Ability.Trait.UserInput"
    when
        TraitInput($n:name)
    then
        insertLogical(new Ability("Trait." + $n));
end

rule "Ability.Grant"
    when
        AbilityGrant($ability : ability)
        not AbilityReplacement(ability.name == $ability.name)
    then
        insertLogical($ability);
end

rule "Validation.AbilityReplacement.Conflict"
    when
        $r1:AbilityReplacement($n:ability.name)
        $r2:AbilityReplacement($n == ability.name, this != $r1, this.hashCode > $r1.hashCode)
    then
        insertLogical(new ConflictViolation("Two rules both tried to remove ability " + $n, new Object[]{$r1,$r2}));
end

